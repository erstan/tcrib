{"ast":null,"code":"var _jsxFileName = \"/home/e_t/.nvm/versions/node/v16.13.2/projects/tcrib/src/components/Audio.js\";\nimport './Audio.css';\nimport delay from '../utilities/delay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet rewind = 1;\n\nlet rewindUp = function () {\n  let rewind_increment = 0.5;\n  rewind = rewind + rewind_increment;\n  document.getElementById(\"rewind\").innerText = rewind * 1000;\n};\n\nlet rewindDown = function () {\n  if (rewind === 0) return;\n  let rewind_increment = -0.5;\n  rewind = rewind + rewind_increment;\n  document.getElementById(\"rewind\").innerText = rewind * 1000;\n};\n\nlet pauseForFewSeconds = function () {\n  document.getElementById(\"audio_player\").pause();\n  delay(function () {\n    let presentTime = document.getElementById(\"audio_player\").currentTime;\n    document.getElementById(\"audio_player\").currentTime = presentTime > rewind ? presentTime - rewind : 0;\n    document.getElementById(\"audio_player\").play();\n  }, 1500);\n};\n\nfunction Audio() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"audio_file\",\n      type: \"file\",\n      accept: \"audio/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rewind-controller\",\n      id: \"rewind-down\",\n      onClick: rewindDown,\n      children: \" - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Auto-rewind : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"rewind\",\n      children: \"1000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"ms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rewind-controller\",\n      id: \"rewind-up\",\n      onClick: rewindUp,\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      id: \"audio_player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Audio;\nexport default Audio;\nexport { pauseForFewSeconds };\n\nvar _c;\n\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"sources":["/home/e_t/.nvm/versions/node/v16.13.2/projects/tcrib/src/components/Audio.js"],"names":["delay","rewind","rewindUp","rewind_increment","document","getElementById","innerText","rewindDown","pauseForFewSeconds","pause","presentTime","currentTime","play","Audio"],"mappings":";AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,oBAAlB;;;AACA,IAAIC,MAAM,GAAG,CAAb;;AACA,IAAIC,QAAQ,GAAG,YAAW;AACtB,MAAIC,gBAAgB,GAAG,GAAvB;AACAF,EAAAA,MAAM,GAAGA,MAAM,GAAGE,gBAAlB;AACAC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8CL,MAAM,GAAG,IAAvD;AACH,CAJD;;AAKA,IAAIM,UAAU,GAAG,YAAW;AACxB,MAAGN,MAAM,KAAK,CAAd,EAAiB;AACjB,MAAIE,gBAAgB,GAAG,CAAC,GAAxB;AACAF,EAAAA,MAAM,GAAGA,MAAM,GAAGE,gBAAlB;AACAC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8CL,MAAM,GAAG,IAAvD;AACH,CALD;;AAMA,IAAIO,kBAAkB,GAAG,YAAW;AAChCJ,EAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCI,KAAxC;AACAT,EAAAA,KAAK,CAAC,YAAW;AACb,QAAIU,WAAW,GAAGN,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCM,WAA1D;AACAP,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCM,WAAxC,GAAuDD,WAAW,GAACT,MAAb,GACrBS,WAAW,GAAGT,MADO,GACE,CADxD;AAEgCG,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCO,IAAxC;AACnC,GALI,EAKF,IALE,CAAL;AAMH,CARD;;AASA,SAASC,KAAT,GAAiB;AACb,sBAAO;AAAA,4BACH;AAAO,MAAA,EAAE,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAmC,MAAA,MAAM,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,EAAE,EAAC,aAAzC;AAAuD,MAAA,OAAO,EAAEN,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAI4B;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJ5B,eAIyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJzD,eAKH;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,EAAE,EAAC,WAAzC;AAAqD,MAAA,OAAO,EAAEL,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALG,eAMH;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YANG,eAOH;AAAA;AAAA;AAAA;AAAA,YAPG;AAAA,kBAAP;AASH;;KAVQW,K;AAWT,eAAeA,KAAf;AACA,SAAQL,kBAAR","sourcesContent":["import './Audio.css';\nimport delay from '../utilities/delay';\nlet rewind = 1;\nlet rewindUp = function() {\n    let rewind_increment = 0.5;\n    rewind = rewind + rewind_increment;\n    document.getElementById(\"rewind\").innerText = rewind * 1000;\n}\nlet rewindDown = function() {\n    if(rewind === 0) return;\n    let rewind_increment = -0.5;\n    rewind = rewind + rewind_increment;\n    document.getElementById(\"rewind\").innerText = rewind * 1000;\n}\nlet pauseForFewSeconds = function() {\n    document.getElementById(\"audio_player\").pause();\n    delay(function() {\n        let presentTime = document.getElementById(\"audio_player\").currentTime;\n        document.getElementById(\"audio_player\").currentTime = (presentTime>rewind)?\n                                        (presentTime - rewind): 0;\n                                        document.getElementById(\"audio_player\").play();\n    }, 1500);\n}\nfunction Audio() {\n    return <>\n        <input id=\"audio_file\" type=\"file\" accept=\"audio/*\" />\n        <hr />\n        <button className=\"rewind-controller\" id=\"rewind-down\" onClick={rewindDown}> - </button>\n            <span>Auto-rewind : </span><span id=\"rewind\">1000</span><span>ms</span>\n        <button className=\"rewind-controller\" id=\"rewind-up\" onClick={rewindUp}> + </button>\n        <audio controls id=\"audio_player\"></audio>\n        <hr />\n    </>;\n}\nexport default Audio;\nexport {pauseForFewSeconds};"]},"metadata":{},"sourceType":"module"}